{
  "openapi": "3.0.0",
  "info": {
    "title": "Library Management API",
    "description": "API for managing books and library members",
    "version": "1.0.0"
  },
  "tags": [
    {"name": "Books", "description": "Book management endpoints"},
    {"name": "Members", "description": "Library member management"}
  ],
  "paths": {
    "/books": {
      "post": {
        "tags": ["Books"],
        "summary": "Create a new book",
        "security": [{"sessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "author", "ISBN"],
                "properties": {
                  "title": {"type": "string", "example": "To Kill a Mockingbird"},
                  "author": {"type": "string", "example": "Harper Lee"},
                  "ISBN": {"type": "string", "example": "9780061120084"},
                  "genre": {"type": "string", "example": "Fiction"},
                  "publicationYear": {"type": "integer", "example": 1960},
                  "pageCount": {"type": "integer", "example": 336},
                  "availability": {"type": "boolean", "example": true}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {"type": "string", "example": "507f1f77bcf86cd799439011"},
                    "title": {"type": "string", "example": "To Kill a Mockingbird"},
                    "author": {"type": "string", "example": "Harper Lee"},
                    "ISBN": {"type": "string", "example": "9780061120084"},
                    "genre": {"type": "string", "example": "Fiction"},
                    "publicationYear": {"type": "integer", "example": 1960},
                    "pageCount": {"type": "integer", "example": 336},
                    "availability": {"type": "boolean", "example": true}
                  }
                }
              }
            }
          },
          "400": {"$ref": "#/components/responses/400Validation"},
          "401": {"$ref": "#/components/responses/401Unauthorized"}
        }
      },
      "get": {
        "tags": ["Books"],
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {"type": "string", "example": "507f1f77bcf86cd799439011"},
                      "title": {"type": "string", "example": "To Kill a Mockingbird"},
                      "author": {"type": "string", "example": "Harper Lee"},
                      "ISBN": {"type": "string", "example": "9780061120084"},
                      "genre": {"type": "string", "example": "Fiction"},
                      "publicationYear": {"type": "integer", "example": 1960},
                      "pageCount": {"type": "integer", "example": 336},
                      "availability": {"type": "boolean", "example": true}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "507f1f77bcf86cd799439011"
          },
          "description": "MongoDB ObjectID"
        }
      ],
      "get": {
        "tags": ["Books"],
        "summary": "Get book details",
        "responses": {
          "200": {
            "description": "Book details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {"type": "string", "example": "507f1f77bcf86cd799439011"},
                    "title": {"type": "string", "example": "To Kill a Mockingbird"},
                    "author": {"type": "string", "example": "Harper Lee"},
                    "ISBN": {"type": "string", "example": "9780061120084"},
                    "genre": {"type": "string", "example": "Fiction"},
                    "publicationYear": {"type": "integer", "example": 1960},
                    "pageCount": {"type": "integer", "example": 336},
                    "availability": {"type": "boolean", "example": true}
                  }
                }
              }
            }
          },
          "404": {"$ref": "#/components/responses/404NotFound"}
        }
      },
      "put": {
        "tags": ["Books"],
        "summary": "Update book",
        "security": [{"sessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {"type": "string", "example": "To Kill a Mockingbird (Updated)"},
                  "author": {"type": "string", "example": "Harper Lee"},
                  "ISBN": {"type": "string", "example": "9780061120084"},
                  "genre": {"type": "string", "example": "Classic Fiction"},
                  "publicationYear": {"type": "integer", "example": 1960},
                  "pageCount": {"type": "integer", "example": 336},
                  "availability": {"type": "boolean", "example": false}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {"type": "string", "example": "507f1f77bcf86cd799439011"},
                    "title": {"type": "string", "example": "To Kill a Mockingbird (Updated)"},
                    "author": {"type": "string", "example": "Harper Lee"},
                    "ISBN": {"type": "string", "example": "9780061120084"},
                    "genre": {"type": "string", "example": "Fiction"},
                    "publicationYear": {"type": "integer", "example": 1960},
                    "pageCount": {"type": "integer", "example": 336},
                    "availability": {"type": "boolean", "example": false}
                  }
                }
              }
            }
          },
          "400": {"$ref": "#/components/responses/400Validation"},
          "404": {"$ref": "#/components/responses/404NotFound"}
        }
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete book",
        "security": [{"sessionAuth": []}],
        "responses": {
          "200": {
            "description": "Book deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "404": {"$ref": "#/components/responses/404NotFound"}
        }
      }
    },
    "/members": {
      "post": {
        "tags": ["Members"],
        "summary": "Add new member",
        "security": [{"sessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["firstname", "lastname", "email"],
                "properties": {
                  "firstname": {"type": "string", "example": "Jane"},
                  "lastname": {"type": "string", "example": "Smith"},
                  "email": {"type": "string", "format": "email", "example": "jane.smith@example.com"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {"type": "string", "example": "507f191e810c19729de860eb"},
                    "firstname": {"type": "string", "example": "Jane"},
                    "lastname": {"type": "string", "example": "Smith"},
                    "email": {"type": "string", "format": "email", "example": "jane.smith@example.com"},
                    "membershipDate": {"type": "string", "format": "date-time", "example": "2023-10-15T08:30:00.000Z"}
                  }
                }
              }
            }
          },
          "400": {"$ref": "#/components/responses/400Validation"},
          "401": {"$ref": "#/components/responses/401Unauthorized"}
        }
      },
      "get": {
        "tags": ["Members"],
        "summary": "List all members",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {"type": "string", "example": "507f191e810c19729de860eb"},
                      "firstname": {"type": "string", "example": "Jane"},
                      "lastname": {"type": "string", "example": "Smith"},
                      "email": {"type": "string", "format": "email", "example": "jane.smith@example.com"},
                      "membershipDate": {"type": "string", "format": "date-time", "example": "2023-10-15T08:30:00.000Z"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "507f191e810c19729de860eb"
          },
          "description": "MongoDB ObjectID"
        }
      ],
      "get": {
        "tags": ["Members"],
        "summary": "Get member details",
        "responses": {
          "200": {
            "description": "Member details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {"type": "string", "example": "507f191e810c19729de860eb"},
                    "firstname": {"type": "string", "example": "Jane"},
                    "lastname": {"type": "string", "example": "Smith"},
                    "email": {"type": "string", "format": "email", "example": "jane.smith@example.com"},
                    "membershipDate": {"type": "string", "format": "date-time", "example": "2023-10-15T08:30:00.000Z"}
                  }
                }
              }
            }
          },
          "404": {"$ref": "#/components/responses/404NotFound"}
        }
      },
      "put": {
        "tags": ["Members"],
        "summary": "Update member",
        "security": [{"sessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstname": {"type": "string", "example": "Jane"},
                  "lastname": {"type": "string", "example": "Smith"},
                  "email": {"type": "string", "format": "email", "example": "jane.newemail@example.com"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {"type": "string", "example": "507f191e810c19729de860eb"},
                    "firstname": {"type": "string", "example": "Jane"},
                    "lastname": {"type": "string", "example": "Smith"},
                    "email": {"type": "string", "format": "email", "example": "jane.newemail@example.com"},
                    "membershipDate": {"type": "string", "format": "date-time", "example": "2023-10-15T08:30:00.000Z"}
                  }
                }
              }
            }
          },
          "400": {"$ref": "#/components/responses/400Validation"},
          "404": {"$ref": "#/components/responses/404NotFound"}
        }
      },
      "delete": {
        "tags": ["Members"],
        "summary": "Remove member",
        "security": [{"sessionAuth": []}],
        "responses": {
          "200": {
            "description": "Member deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "404": {"$ref": "#/components/responses/404NotFound"}
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "sessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid"
      }
    },
    "responses": {
      "400Validation": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string", "example": "Validation Error"},
                "message": {"type": "string", "example": "Invalid request data"},
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {"type": "string", "example": "title"},
                      "message": {"type": "string", "example": "Title is required"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401Unauthorized": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string", "example": "Unauthorized"},
                "message": {"type": "string", "example": "Authentication required"}
              }
            }
          }
        }
      },
      "404NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {"type": "string", "example": "Not Found"},
                "message": {"type": "string", "example": "Resource not found"}
              }
            }
          }
        }
      }
    }
  }
}