{
  "openapi": "3.0.0",
  "info": {
    "title": "Library Management API",
    "description": "API for managing books and library members",
    "version": "1.0.0"
  },
  "tags": [
    {"name": "Books", "description": "Book management endpoints"},
    {"name": "Members", "description": "Library member management"}
  ],
  "paths": {
    "/books": {
      "post": {
        "tags": ["Books"],
        "summary": "Create a new book",
        "security": [{"sessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Book"},
              "example": {
                "title": "To Kill a Mockingbird",
                "author": "Harper Lee",
                "ISBN": "9780061120084",
                "genre": "Fiction",
                "publicationYear": 1960,
                "pageCount": 336,
                "availability": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Book"}
              }
            }
          },
          "400": {"$ref": "#/components/responses/ValidationError"},
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      },
      "get": {
        "tags": ["Books"],
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/Book"}
                }
              }
            }
          }
        }
      }
    },
    "/books/{id}": {
      "parameters": [{"$ref": "#/components/parameters/ResourceId"}],
      "get": {
        "tags": ["Books"],
        "summary": "Get book details",
        "responses": {
          "200": {
            "description": "Book details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Book"}
              }
            }
          },
          "404": {"$ref": "#/components/responses/NotFound"}
        }
      },
      "put": {
        "tags": ["Books"],
        "summary": "Update book",
        "security": [{"sessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Book"},
              "example": {
                "title": "To Kill a Mockingbird (Updated)",
                "author": "Harper Lee",
                "ISBN": "9780061120084",
                "genre": "Classic Fiction",
                "publicationYear": 1960,
                "pageCount": 336,
                "availability": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Book"}
              }
            }
          },
          "400": {"$ref": "#/components/responses/ValidationError"},
          "404": {"$ref": "#/components/responses/NotFound"}
        }
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete book",
        "security": [{"sessionAuth": []}],
        "responses": {
          "200": {"$ref": "#/components/responses/DeleteSuccess"},
          "404": {"$ref": "#/components/responses/NotFound"}
        }
      }
    },
    "/members": {
      "post": {
        "tags": ["Members"],
        "summary": "Add new member",
        "security": [{"sessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Member"},
              "example": {
                "firstname": "Jane",
                "lastname": "Smith",
                "email": "jane.smith@example.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Member"}
              }
            }
          },
          "400": {"$ref": "#/components/responses/ValidationError"},
          "401": {"$ref": "#/components/responses/Unauthorized"}
        }
      },
      "get": {
        "tags": ["Members"],
        "summary": "List all members",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/Member"}
                }
              }
            }
          }
        }
      }
    },
    "/members/{id}": {
      "parameters": [{"$ref": "#/components/parameters/ResourceId"}],
      "get": {
        "tags": ["Members"],
        "summary": "Get member details",
        "responses": {
          "200": {
            "description": "Member details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Member"}
              }
            }
          },
          "404": {"$ref": "#/components/responses/NotFound"}
        }
      },
      "put": {
        "tags": ["Members"],
        "summary": "Update member",
        "security": [{"sessionAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Member"},
              "example": {
                "firstname": "Jane",
                "lastname": "Smith",
                "email": "jane.newemail@example.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Member"}
              }
            }
          },
          "400": {"$ref": "#/components/responses/ValidationError"},
          "404": {"$ref": "#/components/responses/NotFound"}
        }
      },
      "delete": {
        "tags": ["Members"],
        "summary": "Remove member",
        "security": [{"sessionAuth": []}],
        "responses": {
          "200": {"$ref": "#/components/responses/DeleteSuccess"},
          "404": {"$ref": "#/components/responses/NotFound"}
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "required": ["title", "author", "ISBN"],
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[0-9a-fA-F]{24}$",
            "example": "507f1f77bcf86cd799439011"
          },
          "title": {"type": "string", "example": "To Kill a Mockingbird"},
          "author": {"type": "string", "example": "Harper Lee"},
          "ISBN": {"type": "string", "example": "9780061120084"},
          "genre": {"type": "string", "example": "Fiction"},
          "publicationYear": {"type": "integer", "example": 1960},
          "pageCount": {"type": "integer", "example": 336},
          "availability": {"type": "boolean", "example": true}
        }
      },
      "Member": {
        "type": "object",
        "required": ["firstname", "lastname", "email"],
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[0-9a-fA-F]{24}$",
            "example": "507f191e810c19729de860eb"
          },
          "firstname": {"type": "string", "example": "Jane"},
          "lastname": {"type": "string", "example": "Smith"},
          "email": {"type": "string", "format": "email", "example": "jane.smith@example.com"},
          "membershipDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2023-10-15T08:30:00.000Z"
          }
        }
      }
    },
    "parameters": {
      "ResourceId": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{24}$",
          "example": "507f1f77bcf86cd799439011"
        },
        "description": "MongoDB ObjectID"
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string"}
              }
            },
            "example": {"message": "Unauthorized - Please login first"}
          }
        }
      },
      "ValidationError": {
        "description": "Invalid request data",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "msg": {"type": "string"},
                      "param": {"type": "string"}
                    }
                  }
                }
              }
            },
            "example": {
              "errors": [
                {"msg": "Email must be valid", "param": "email"},
                {"msg": "Title is required", "param": "title"}
              ]
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string"}
              }
            },
            "example": {"message": "Resource not found"}
          }
        }
      },
      "DeleteSuccess": {
        "description": "Resource deleted",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {"type": "string"}
              }
            },
            "example": {"message": "Resource deleted successfully"}
          }
        }
      }
    },
    "securitySchemes": {
      "sessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid",
        "description": "Session cookie authentication"
      }
    }
  }
}