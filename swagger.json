{
  "openapi": "3.0.0",
  "info": {
    "title": "Library Management API",
    "description": "API for managing books and users in a library system",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Books",
      "description": "Book management endpoints"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    }
  ],
  "paths": {
    "/books": {
      "post": {
        "tags": ["Books"],
        "summary": "Create a new book",
        "description": "Add a new book to the library",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              },
              "examples": {
                "sampleBook": {
                  "value": {
                    "title": "The Great Gatsby",
                    "author": "F. Scott Fitzgerald",
                    "ISBN": "9780743273565",
                    "genre": "Classic",
                    "publicationYear": 1925,
                    "pageCount": 218,
                    "availability": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "examples": {
                  "validationError": {
                    "value": {
                      "errors": [
                        {
                          "msg": "Title is required",
                          "param": "title",
                          "location": "body"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Books"],
        "summary": "Get all books",
        "description": "Retrieve a list of all books in the library",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Books"],
        "summary": "Get a book by ID",
        "description": "Retrieve a single book by its ID",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "message": "Book not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Books"],
        "summary": "Update a book",
        "description": "Update an existing book by ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              },
              "examples": {
                "updateExample": {
                  "value": {
                    "title": "Updated Book Title",
                    "author": "Updated Author Name",
                    "ISBN": "9781234567890",
                    "genre": "Updated Genre",
                    "publicationYear": 2023,
                    "pageCount": 300,
                    "availability": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete a book",
        "description": "Delete a book by ID",
        "responses": {
          "200": {
            "description": "Book deleted successfully",
            "content": {
              "application/json": {
                "examples": {
                  "deleteSuccess": {
                    "value": {
                      "message": "Book deleted"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Add a new user to the system",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "sampleUser": {
                  "value": {
                    "firstname": "John",
                    "lastname": "Doe",
                    "email": "john.doe@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "examples": {
                  "validationError": {
                    "value": {
                      "errors": [
                        {
                          "msg": "Email must be valid",
                          "param": "email",
                          "location": "body"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieve a list of all users",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Users"],
        "summary": "Get a user by ID",
        "description": "Retrieve a single user by their ID",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update a user",
        "description": "Update an existing user by ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "updateExample": {
                  "value": {
                    "firstname": "UpdatedFirstName",
                    "lastname": "UpdatedLastName",
                    "email": "updated.email@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user",
        "description": "Delete a user by ID",
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "examples": {
                  "deleteSuccess": {
                    "value": {
                      "message": "User deleted"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "author": { "type": "string" },
          "ISBN": { "type": "string" },
          "genre": { "type": "string" },
          "publicationYear": { "type": "number" },
          "pageCount": { "type": "number" },
          "availability": { "type": "boolean" }
        },
        "required": ["title", "author", "ISBN"],
        "example": {
          "title": "Sample Book Title",
          "author": "Sample Author",
          "ISBN": "9781234567890",
          "genre": "Fiction",
          "publicationYear": 2023,
          "pageCount": 300,
          "availability": true
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "firstname": { "type": "string" },
          "lastname": { "type": "string" },
          "email": { "type": "string", "format": "email" }
        },
        "required": ["firstname", "lastname", "email"],
        "example": {
          "firstname": "Jane",
          "lastname": "Smith",
          "email": "jane.smith@example.com"
        }
      }
    }
  }
}