{
  "openapi": "3.0.0",
  "info": {
    "title": "Library Management API",
    "description": "API for managing books and library members",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Books",
      "description": "Book management endpoints"
    },
    {
      "name": "Members",
      "description": "Library member management"
    }
  ],
  "paths": {
    "/books": {
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Create a new book",
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ResourceId"
        }
      ],
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get book details",
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessfulOperation"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update book",
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessfulOperation"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete book",
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteSuccess"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/members": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "Add new member",
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      },
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "List all members",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ResourceId"
        }
      ],
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Get member details",
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessfulOperation"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Members"
        ],
        "summary": "Update member",
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Member"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessfulOperation"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Members"
        ],
        "summary": "Remove member",
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteSuccess"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Great Gatsby"
          },
          "author": {
            "type": "string",
            "example": "F. Scott Fitzgerald"
          },
          "ISBN": {
            "type": "string",
            "example": "9780743273565"
          },
          "genre": {
            "type": "string",
            "example": "Classic"
          },
          "publicationYear": {
            "type": "integer",
            "example": 1925
          },
          "pageCount": {
            "type": "integer",
            "example": 218
          },
          "availability": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "title",
          "author",
          "ISBN"
        ]
      },
      "Member": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "example": "John"
          },
          "lastname": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          }
        },
        "required": [
          "firstname",
          "lastname",
          "email"
        ]
      }
    },
    "parameters": {
      "ResourceId": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "MongoDB ObjectID"
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "example": {
                "message": "Unauthorized - Please login first"
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Invalid request data",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "msg": {
                        "type": "string"
                      },
                      "param": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "example": {
                "message": "Book not found"
              }
            }
          }
        }
      },
      "DeleteSuccess": {
        "description": "Resource deleted",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "example": {
                "message": "Book deleted successfully"
              }
            }
          }
        }
      },
      "SuccessfulOperation": {
        "description": "Operation completed",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Book"
                },
                {
                  "$ref": "#/components/schemas/Member"
                }
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "sessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid",
        "description": "Session cookie authentication"
      }
    }
  }
}